

# environment common bundles

# environment 092b04a40fdd4cb8bfdb685f2c4a0328
bundle common 092b04a40fdd4cb8bfdb685f2c4a0328
{
  vars:
      "activated" string => "--'activated' value passed as a class function--";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "";
      "verbose" string => "";
  classes:
      "runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated" and => { classmatch("cfengine_3") };
      "runenv_092b04a40fdd4cb8bfdb685f2c4a0328_test" expression => "!any";
      "runenv_092b04a40fdd4cb8bfdb685f2c4a0328_verbose" expression => "!any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "sketches/libraries/dclib/library.cf", "sketches/package_management/packages_installed/main.cf", "sketches/utilities/abortclasses/main.cf", "sketches/libraries/dclib-3.5.0/library.cf", "sketches/utilities/data_classes/main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'metadata' from definition sketch metadata, activation __abort_001_Packages_installed_installed
      "__abort_001_Packages_installed_installed_metadata[activation][identifier]" string => "abort";
      "__abort_001_Packages_installed_installed_metadata[activation][timestamp]" string => "1379681971";
      "__abort_001_Packages_installed_installed_metadata[api][][type]" string => "bundle_options";
      "__abort_001_Packages_installed_installed_metadata[api][metadata][type]" string => "metadata";
      "__abort_001_Packages_installed_installed_metadata[api][pkgs_add][type]" string => "list";
      "__abort_001_Packages_installed_installed_metadata[api][runenv][type]" string => "environment";
      "__abort_001_Packages_installed_installed_metadata[authors]" slist => { "Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>" };
      "__abort_001_Packages_installed_installed_metadata[bundle_options][name]" string => "";
      "__abort_001_Packages_installed_installed_metadata[bundle_options][single_use]" string => "1";
      "__abort_001_Packages_installed_installed_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__abort_001_Packages_installed_installed_metadata[license]" string => "MIT";
      "__abort_001_Packages_installed_installed_metadata[location]" string => "sketches/package_management/packages_installed";
      "__abort_001_Packages_installed_installed_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "__abort_001_Packages_installed_installed_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__abort_001_Packages_installed_installed_metadata[manifest_docs]" slist => { "README.md" };
      "__abort_001_Packages_installed_installed_metadata[manifest_exe]" slist => { "cf_null" };
      "__abort_001_Packages_installed_installed_metadata[manifest_extra]" slist => { "params/demo.json" };
      "__abort_001_Packages_installed_installed_metadata[manifest_test]" slist => { "test.pl" };
      "__abort_001_Packages_installed_installed_metadata[name]" string => "Packages::installed";
      "__abort_001_Packages_installed_installed_metadata[tags]" slist => { "cfdc", "packages", "enterprise_compatible" };
      "__abort_001_Packages_installed_installed_metadata[version]" string => "1.0.0";

      # list 'pkgs_add' from definition 41b21b2310240ec555828054584bf1f1, activation __abort_001_Packages_installed_installed
      "__abort_001_Packages_installed_installed_pkgs_add" slist => { "as" };

      # array 'metadata' from definition sketch metadata, activation __ca_002_Packages_installed_installed
      "__ca_002_Packages_installed_installed_metadata[activation][identifier]" string => "ca";
      "__ca_002_Packages_installed_installed_metadata[activation][timestamp]" string => "1380015517";
      "__ca_002_Packages_installed_installed_metadata[api][][type]" string => "bundle_options";
      "__ca_002_Packages_installed_installed_metadata[api][metadata][type]" string => "metadata";
      "__ca_002_Packages_installed_installed_metadata[api][pkgs_add][type]" string => "list";
      "__ca_002_Packages_installed_installed_metadata[api][runenv][type]" string => "environment";
      "__ca_002_Packages_installed_installed_metadata[authors]" slist => { "Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>" };
      "__ca_002_Packages_installed_installed_metadata[bundle_options][name]" string => "";
      "__ca_002_Packages_installed_installed_metadata[bundle_options][single_use]" string => "1";
      "__ca_002_Packages_installed_installed_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__ca_002_Packages_installed_installed_metadata[license]" string => "MIT";
      "__ca_002_Packages_installed_installed_metadata[location]" string => "sketches/package_management/packages_installed";
      "__ca_002_Packages_installed_installed_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "__ca_002_Packages_installed_installed_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__ca_002_Packages_installed_installed_metadata[manifest_docs]" slist => { "README.md" };
      "__ca_002_Packages_installed_installed_metadata[manifest_exe]" slist => { "cf_null" };
      "__ca_002_Packages_installed_installed_metadata[manifest_extra]" slist => { "params/demo.json" };
      "__ca_002_Packages_installed_installed_metadata[manifest_test]" slist => { "test.pl" };
      "__ca_002_Packages_installed_installed_metadata[name]" string => "Packages::installed";
      "__ca_002_Packages_installed_installed_metadata[tags]" slist => { "cfdc", "packages", "enterprise_compatible" };
      "__ca_002_Packages_installed_installed_metadata[version]" string => "1.0.0";

      # list 'pkgs_add' from definition 321ec027400467aeccc1cda45d77ac2d, activation __ca_002_Packages_installed_installed
      "__ca_002_Packages_installed_installed_pkgs_add" slist => { "ax" };

      # array 'metadata' from definition sketch metadata, activation __install_sl_003_Packages_installed_installed
      "__install_sl_003_Packages_installed_installed_metadata[activation][identifier]" string => "install sl";
      "__install_sl_003_Packages_installed_installed_metadata[activation][timestamp]" string => "1381179263";
      "__install_sl_003_Packages_installed_installed_metadata[api][][type]" string => "bundle_options";
      "__install_sl_003_Packages_installed_installed_metadata[api][metadata][type]" string => "metadata";
      "__install_sl_003_Packages_installed_installed_metadata[api][pkgs_add][type]" string => "list";
      "__install_sl_003_Packages_installed_installed_metadata[api][runenv][type]" string => "environment";
      "__install_sl_003_Packages_installed_installed_metadata[authors]" slist => { "Eystein Stenberg <eystein.maloy.stenberg@cfengine.com>" };
      "__install_sl_003_Packages_installed_installed_metadata[bundle_options][name]" string => "";
      "__install_sl_003_Packages_installed_installed_metadata[bundle_options][single_use]" string => "1";
      "__install_sl_003_Packages_installed_installed_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__install_sl_003_Packages_installed_installed_metadata[license]" string => "MIT";
      "__install_sl_003_Packages_installed_installed_metadata[location]" string => "sketches/package_management/packages_installed";
      "__install_sl_003_Packages_installed_installed_metadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf", "test.pl" };
      "__install_sl_003_Packages_installed_installed_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__install_sl_003_Packages_installed_installed_metadata[manifest_docs]" slist => { "README.md" };
      "__install_sl_003_Packages_installed_installed_metadata[manifest_exe]" slist => { "cf_null" };
      "__install_sl_003_Packages_installed_installed_metadata[manifest_extra]" slist => { "params/demo.json" };
      "__install_sl_003_Packages_installed_installed_metadata[manifest_test]" slist => { "test.pl" };
      "__install_sl_003_Packages_installed_installed_metadata[name]" string => "Packages::installed";
      "__install_sl_003_Packages_installed_installed_metadata[tags]" slist => { "cfdc", "packages", "enterprise_compatible" };
      "__install_sl_003_Packages_installed_installed_metadata[version]" string => "1.0.0";

      # list 'pkgs_add' from definition 7207a19a168704c4cbc1018665c36c04, activation __install_sl_003_Packages_installed_installed
      "__install_sl_003_Packages_installed_installed_pkgs_add" slist => { "sl" };

      # array 'metadata' from definition sketch metadata, activation __qw_004_Utilities_abortclasses_abortclasses_filebased
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[activation][identifier]" string => "qw";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[activation][timestamp]" string => "1379604456";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][abortclass][type]" string => "string";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][alert_only][type]" string => "boolean";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][metadata][type]" string => "metadata";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][runenv][type]" string => "environment";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][timeout][type]" string => "array";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][trigger_context][type]" string => "string";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[api][trigger_file][type]" string => "string";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[authors]" slist => { "Ben Heilman <bheilman@enova.com>", "Nick Anderson <nick@cmdln.org>", "Ted Zlatanov <tzz@lifelogs.com>" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[license]" string => "MIT";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[location]" string => "sketches/utilities/abortclasses";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest]" slist => { "README.md", "changelog", "main.cf", "params/example.json", "test.cf" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest_docs]" slist => { "README.md" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest_exe]" slist => { "cf_null" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest_extra]" slist => { "changelog", "params/example.json" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[manifest_test]" slist => { "cf_null" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[name]" string => "Utilities::abortclasses";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[tags]" slist => { "cfdc" };
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata[version]" string => "1.7";

      # array 'timeout' from definition efce8022c7a53d3755ded38aa6b64730, activation __qw_004_Utilities_abortclasses_abortclasses_filebased
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[action]" string => "abortclasses_timeout_action_noop";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[days]" string => "144";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[enabled]" string => "false";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[hours]" string => "24";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[minutes]" string => "0";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[months]" string => "0";
      "__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout[years]" string => "0";

      # list 'files' from definition 3603e753b8cb8ecc4d440dc91cd74742, activation __cc_005_Data_Classes_byfile
      "__cc_005_Data_Classes_byfile_files" slist => { "vdasz" };

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "092b04a40fdd4cb8bfdb685f2c4a0328" usebundle => "092b04a40fdd4cb8bfdb685f2c4a0328";

    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__abort_001_Packages_installed_installed" usebundle => cfdc_packages:installed("092b04a40fdd4cb8bfdb685f2c4a0328", "default:cfsketch_run.__abort_001_Packages_installed_installed_metadata", @(cfsketch_run.__abort_001_Packages_installed_installed_pkgs_add)), ifvarclass => "(centos|debian|redhat|ubuntu)", useresult => "return___abort_001_Packages_installed_installed";
    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__ca_002_Packages_installed_installed" usebundle => cfdc_packages:installed("092b04a40fdd4cb8bfdb685f2c4a0328", "default:cfsketch_run.__ca_002_Packages_installed_installed_metadata", @(cfsketch_run.__ca_002_Packages_installed_installed_pkgs_add)), ifvarclass => "(centos|debian|redhat|ubuntu)", useresult => "return___ca_002_Packages_installed_installed";
    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__install_sl_003_Packages_installed_installed" usebundle => cfdc_packages:installed("092b04a40fdd4cb8bfdb685f2c4a0328", "default:cfsketch_run.__install_sl_003_Packages_installed_installed_metadata", @(cfsketch_run.__install_sl_003_Packages_installed_installed_pkgs_add)), ifvarclass => "(centos|debian|redhat|ubuntu)", useresult => "return___install_sl_003_Packages_installed_installed";
    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__qw_004_Utilities_abortclasses_abortclasses_filebased" usebundle => abortclasses_filebased("092b04a40fdd4cb8bfdb685f2c4a0328", "default:cfsketch_run.__qw_004_Utilities_abortclasses_abortclasses_filebased_metadata", "class", "/COWBOY", "1", "any", "default:cfsketch_run.__qw_004_Utilities_abortclasses_abortclasses_filebased_timeout"), ifvarclass => "(centos|debian|redhat|ubuntu)", useresult => "return___qw_004_Utilities_abortclasses_abortclasses_filebased";
    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__cc_005_Data_Classes_byfile" usebundle => byfile("zz", @(cfsketch_run.__cc_005_Data_Classes_byfile_files)), ifvarclass => "linux", useresult => "return___cc_005_Data_Classes_byfile";
    runenv_092b04a40fdd4cb8bfdb685f2c4a0328_activated::
      "__aaa_006_Data_Classes_bynet" usebundle => bynet("as", "/usr/bin/curl -s", "http://asw.as", "daas"), ifvarclass => "linux", useresult => "return___aaa_006_Data_Classes_bynet";

  reports:
    inform_mode::
      "activation __abort_001_Packages_installed_installed could not run because it requires classes (centos|debian|redhat|ubuntu)" ifvarclass => "inform_mode.!((centos|debian|redhat|ubuntu))";
      "activation __ca_002_Packages_installed_installed could not run because it requires classes (centos|debian|redhat|ubuntu)" ifvarclass => "inform_mode.!((centos|debian|redhat|ubuntu))";
      "activation __install_sl_003_Packages_installed_installed could not run because it requires classes (centos|debian|redhat|ubuntu)" ifvarclass => "inform_mode.!((centos|debian|redhat|ubuntu))";
      "activation __qw_004_Utilities_abortclasses_abortclasses_filebased could not run because it requires classes (centos|debian|redhat|ubuntu)" ifvarclass => "inform_mode.!((centos|debian|redhat|ubuntu))";
      "activation __cc_005_Data_Classes_byfile returned defined = $(return___cc_005_Data_Classes_byfile[defined])";
      "activation __cc_005_Data_Classes_byfile could not run because it requires classes linux" ifvarclass => "inform_mode.!(linux)";
      "activation __aaa_006_Data_Classes_bynet returned defined = $(return___aaa_006_Data_Classes_bynet[defined])";
      "activation __aaa_006_Data_Classes_bynet could not run because it requires classes linux" ifvarclass => "inform_mode.!(linux)";
}
